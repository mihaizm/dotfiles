#!/usr/bin/env bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

#xsetroot -solid '#5A8E3A'

setxkbmap -layout us,ro -variant ,std -option grp:alt_shift_toggle

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

herbstclient setenv PATH "$(herbstclient getenv PATH):$HOME/bin"

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-q close
#hc keybind $Mod-Return spawn "${TERMINAL:-xterm}" # use your $TERMINAL with xterm as fallback

hc keybind $Mod-Return spawn xfce4-terminal
hc keybind $Mod-f spawn thunar
hc keybind $Mod-w spawn firefox
hc keybind $Mod-e spawn mousepad
hc keybind $Mod-v spawn gvim
hc keybind $Mod-t spawn xfce4-screenshooter -w
hc keybind Control-Escape spawn rofi -show run
hc keybind $Mod-Shift-m spawn systemctl poweroff
hc keybind $Mod-Shift-l spawn lockblur

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
#hc keybind $Mod-h     focus left
#hc keybind $Mod-j     focus down
#hc keybind $Mod-k     focus up
#hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
#hc keybind $Mod-Shift-h     shift left
#hc keybind $Mod-Shift-j     shift down
#hc keybind $Mod-Shift-k     shift up
#hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       and , split bottom  0.5 , focus down
hc keybind $Mod-o       and , split right   0.5 , focus right

hc keybind $Mod-h       and , split left    0.5 , focus left
hc keybind $Mod-j       and , split bottom  0.5 , focus down
hc keybind $Mod-k       and , split top     0.5 , focus up
hc keybind $Mod-l       and , split right   0.5 , focus right

# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
#hc keybind $Mod-s floating toggle
hc keybind $Mod-a fullscreen toggle
hc keybind $Mod-s set_attr clients.focus.floating toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

layout="(split horizontal:0.5:0 (split vertical:0.5:0 (clients vertical:0) (clients vertical:0)) (clients vertical:0))"
hc keybind $Mod-y load "$layout"
hc keybind $Mod-g rotate

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

hlwm_theme_multicolored() {
	# set various colors to clearly outline each element

	hc set frame_border_active_color darkblue
	hc set frame_border_normal_color blue

	hc set frame_border_inner_color red		# not set by default
	hc set frame_border_inner_width 4		# less than frame_border width, adds to it

	hc set frame_bg_normal_color orange
	hc set frame_bg_active_color darkgreen
	hc set frame_border_width 8
	hc set always_show_frame on
	hc set frame_bg_transparent on
	hc set frame_transparent_width 5
	hc set frame_gap 4

	hc attr theme.active.color gray
	hc attr theme.normal.color white
	hc attr theme.urgent.color orange
	hc attr theme.inner_width 4
	hc attr theme.inner_color purple
	hc attr theme.border_width 8
	hc attr theme.floating.border_width 8
	hc attr theme.floating.outer_width 4
	hc attr theme.floating.outer_color red
	hc attr theme.active.inner_color white
	hc attr theme.active.outer_color darkblue
	hc attr theme.background_color black	# visible on resize
}

hlwm_theme_primary() {
	hc set frame_border_active_color black
	hc set frame_border_normal_color darkgray

	hc set frame_border_inner_color red
	hc set frame_border_inner_width 0

	hc set frame_bg_normal_color orange
	hc set frame_bg_active_color darkgreen
	hc set frame_border_width 0
	hc set always_show_frame on
	hc set frame_bg_transparent on
	hc set frame_transparent_width 0
	hc set frame_gap 10

	hc attr theme.active.color '#383838'
	hc attr theme.normal.color '#909090'
	hc attr theme.urgent.color orange
	hc attr theme.inner_width 0
	hc attr theme.inner_color purple
	hc attr theme.border_width 5
	hc attr theme.floating.border_width 5
	hc attr theme.floating.outer_width 0
	hc attr theme.floating.outer_color red
	hc attr theme.active.inner_width 0
	hc attr theme.active.inner_color cyan
	hc attr theme.active.outer_color darkblue
	hc attr theme.background_color black
}

#hlwm_theme_multicolored
hlwm_theme_primary

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings off
hc set mouse_recenter_gap 0

hc set focus_follows_mouse on
hc set update_dragged_clients on

hc keybind $Mod-minus and , cycle_value frame_gap $(seq 80 -5 0) , cycle_value snap_gap $(seq 80 -5 0)
hc keybind $Mod-equal and , cycle_value frame_gap $(seq 0 5 80) , cycle_value snap_gap $(seq 0 5 80)
hc keybind $Mod-bracketleft cycle_value window_gap $(seq 80 -5 0)
hc keybind $Mod-bracketright cycle_value window_gap $(seq 0 5 80)

hc keybind $Mod-0 cycle_value frame_border_width 0 3
hc keybind $Mod-Control-0 cycle_value window_border_width 0 $(hc get_attr theme.border_width)

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc rule class~.* index=e
hc rule class=Sxiv floating=on

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
# hc detect_monitors

# find the panel
#panel=~/.config/herbstluftwm/panel.sh
#[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
#for monitor in $(hc list_monitors | cut -d: -f1) ; do
#    # start it on each monitor
#    "$panel" "$monitor" &
#done

$HOME/.fehbg
pgrep -x xfce4-panel > /dev/null || xfce4-panel -d --sm-client-disable &
pgrep -x nm-applet > /dev/null || nm-applet &
pgrep -x blueman-applet > /dev/null || blueman-applet &
redshift -PO 5000
